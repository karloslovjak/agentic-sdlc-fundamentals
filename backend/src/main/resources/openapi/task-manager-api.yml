openapi: 3.0.3
info:
  title: Task Manager API
  description: |
    REST API for Task Manager application - Accenture Agentic SDLC Fundamentals certification project.

    This API provides CRUD operations for managing tasks with support for different statuses
    (TODO, IN_PROGRESS, DONE) and due dates.
  version: 1.0.0
  contact:
    name: Task Manager Team

servers:
  - url: http://localhost:8080
    description: Local development server

tags:
  - name: Tasks
    description: Task management operations

paths:
  /tasks:
    get:
      tags:
        - Tasks
      summary: Get all tasks
      description: Retrieves a list of all tasks in the system
      operationId: getAllTasks
      responses:
        '200':
          description: List of tasks retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaskResponse'

    post:
      tags:
        - Tasks
      summary: Create a new task
      description: Creates a new task with the provided information
      operationId: createTask
      requestBody:
        description: Task data to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskRequest'
      responses:
        '201':
          description: Task created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResponse'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /tasks/{id}:
    get:
      tags:
        - Tasks
      summary: Get task by ID
      description: Retrieves a specific task by its unique identifier
      operationId: getTaskById
      parameters:
        - name: id
          in: path
          description: Task ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Task retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResponse'
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    put:
      tags:
        - Tasks
      summary: Update an existing task
      description: Updates all fields of an existing task
      operationId: updateTask
      parameters:
        - name: id
          in: path
          description: Task ID
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Updated task data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskRequest'
      responses:
        '200':
          description: Task updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResponse'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      tags:
        - Tasks
      summary: Delete a task
      description: Deletes a task by its unique identifier
      operationId: deleteTask
      parameters:
        - name: id
          in: path
          description: Task ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Task deleted successfully
        '404':
          description: Task not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    TaskRequest:
      type: object
      description: Request object for creating or updating a task
      required:
        - title
        - status
      properties:
        title:
          type: string
          description: Task title
          minLength: 1
          maxLength: 200
          example: "Complete project documentation"
        description:
          type: string
          description: Detailed task description
          maxLength: 2000
          example: "Write comprehensive README and API documentation for the Task Manager project"
        status:
          $ref: '#/components/schemas/TaskStatus'
        dueDate:
          type: string
          format: date
          description: Task due date in ISO 8601 format (YYYY-MM-DD)
          example: "2025-10-31"

    TaskResponse:
      type: object
      description: Response object representing a task
      required:
        - id
        - title
        - status
        - createdAt
        - updatedAt
      properties:
        id:
          type: integer
          format: int64
          description: Unique task identifier
          example: 1
        title:
          type: string
          description: Task title
          example: "Complete project documentation"
        description:
          type: string
          description: Detailed task description
          example: "Write comprehensive README and API documentation for the Task Manager project"
        status:
          $ref: '#/components/schemas/TaskStatus'
        dueDate:
          type: string
          format: date
          description: Task due date in ISO 8601 format (YYYY-MM-DD)
          example: "2025-10-31"
        createdAt:
          type: string
          format: date-time
          description: Timestamp when the task was created
          example: "2025-10-18T10:30:00Z"
        updatedAt:
          type: string
          format: date-time
          description: Timestamp when the task was last updated
          example: "2025-10-18T14:45:00Z"

    TaskStatus:
      type: string
      description: Task status enumeration
      enum:
        - TODO
        - IN_PROGRESS
        - DONE
      example: TODO

    ErrorResponse:
      type: object
      description: Standard error response
      required:
        - message
      properties:
        message:
          type: string
          description: Human-readable error message
          example: "Task not found"
        field:
          type: string
          description: Field that caused the error (for validation errors)
          example: "title"
        code:
          type: string
          description: Machine-readable error code
          example: "NOT_FOUND"
