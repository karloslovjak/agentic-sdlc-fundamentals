# Production Profile Configuration
# Use with: java -jar app.jar --spring.profiles.active=prod
# Or: SPRING_PROFILES_ACTIVE=prod java -jar app.jar

# ========================================
# Server Configuration
# ========================================
server:
  port: 8080
  error:
    # Don't expose sensitive error details in production
    include-message: never
    include-binding-errors: never
    include-stacktrace: never

# ========================================
# Database Configuration - PostgreSQL
# ========================================
# Environment variables override defaults:
# Environment variables from Render (standard PostgreSQL env vars):
# - PGHOST, PGPORT, PGDATABASE (automatically provided by Render)
# - PGUSER, PGPASSWORD (automatically provided by Render)
spring:
  datasource:
    # Build JDBC URL from Render's standard PostgreSQL environment variables
    url: jdbc:postgresql://${PGHOST:localhost}:${PGPORT:5432}/${PGDATABASE:taskmanager}
    username: ${PGUSER:taskuser}
    password: ${PGPASSWORD:taskpass}
    driver-class-name: org.postgresql.Driver

    # Connection pool settings for production
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000

  # ========================================
  # Flyway Configuration - ENABLED
  # ========================================
  flyway:
    enabled: true
    baseline-on-migrate: true
    baseline-version: 0
    locations: classpath:db/migration
    baseline-description: Initial baseline
    # Validate migrations on startup
    validate-on-migrate: true
    # Create schema if it doesn't exist
    create-schemas: true
    # Default schema
    default-schema: public

  # ========================================
  # JPA / Hibernate Configuration
  # ========================================
  jpa:
    # IMPORTANT: Use 'validate' in production with Flyway
    # Hibernate will only validate schema, not modify it
    hibernate:
      ddl-auto: validate

    # Don't show SQL in production logs
    show-sql: false

    properties:
      hibernate:
        # PostgreSQL dialect
        dialect: org.hibernate.dialect.PostgreSQLDialect

        # Performance optimizations
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true

        # Format SQL in logs (if enabled for debugging)
        format_sql: false

  # ========================================
  # Jackson JSON Configuration
  # ========================================
  jackson:
    serialization:
      # No pretty print in production (saves bandwidth)
      indent-output: false
      write-dates-as-timestamps: false
    default-property-inclusion: non_null

# ========================================
# Logging Configuration
# ========================================
logging:
  level:
    root: INFO
    com.accenture.taskmanager: INFO
    org.springframework.web: WARN
    org.hibernate: WARN
    # Set to DEBUG to see Flyway migration details
    org.flywaydb: INFO

  pattern:
    # In containerized environments, log to stdout/stderr only
    # Render and other platforms capture and aggregate console logs
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"

# ========================================
# Actuator Configuration (Production)
# ========================================
management:
  endpoints:
    web:
      exposure:
        # Only expose health endpoint in production
        include: health
  endpoint:
    health:
      # Don't show detailed health info in production (security)
      show-details: when-authorized
      probes:
        enabled: true  # Enable liveness/readiness probes for Kubernetes/Render

# ========================================
# SpringDoc / OpenAPI Configuration
# ========================================
springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    enabled: true
