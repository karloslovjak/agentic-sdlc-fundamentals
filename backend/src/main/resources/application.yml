# Application Configuration
# Main configuration file for Task Manager application

# ========================================
# Server Configuration
# ========================================
server:
  port: 8080
  error:
    include-message: always
    include-binding-errors: always

# ========================================
# Database Configuration
# ========================================
spring:
  # H2 In-Memory Database (Development)
  # Lightweight database for local development
  datasource:
    url: jdbc:h2:mem:taskmanager
    driver-class-name: org.h2.Driver
    username: sa
    password:

    # Production/Development database
    # Uncomment and configure when using PostgreSQL
    # url: jdbc:postgresql://localhost:5432/taskmanager
    # username: taskmanager_user
    # password: your_password_here

  # H2 Console (Development only)
  # Access at http://localhost:8080/h2-console
  h2:
    console:
      enabled: true
      path: /h2-console

  # ========================================
  # Flyway Configuration
  # ========================================
  flyway:
    # Disabled for H2 development (using Hibernate DDL auto)
    # Enabled in production profile for PostgreSQL
    enabled: false
    baseline-on-migrate: true
    baseline-version: 0
    locations: classpath:db/migration
    # Automatically create flyway_schema_history table
    baseline-description: Initial baseline

  # ========================================
  # JPA / Hibernate Configuration
  # ========================================
  jpa:
    # DDL auto mode: create-drop recreates schema on each startup (dev only)
    # Use 'validate' in production with Flyway
    hibernate:
      ddl-auto: create-drop

    # Show SQL queries in console (debug purposes)
    show-sql: false

    # JPA properties
    properties:
      hibernate:
        # Format SQL for readability
        format_sql: true

        # Hibernate dialect (auto-detected from datasource)
        # dialect: org.hibernate.dialect.PostgreSQLDialect

      # Validation configuration - fail fast on validation errors
      javax.persistence.validation.mode: auto

  # ========================================
  # Jackson JSON Configuration
  # ========================================
  jackson:
    # Pretty print JSON responses (development)
    serialization:
      indent-output: true
      write-dates-as-timestamps: false

    # Date format for JSON serialization
    date-format: "yyyy-MM-dd'T'HH:mm:ss"

    # Ignore null values in JSON responses
    default-property-inclusion: non_null

# ========================================
# Logging Configuration
# ========================================
logging:
  # Logging levels
  level:
    root: INFO
    com.accenture.taskmanager: DEBUG
    org.springframework.web: INFO
    org.springframework.data: INFO
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE

  # Logging pattern with structured format
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"

# ========================================
# CORS Configuration
# ========================================
cors:
  # Comma-separated list of allowed origins
  # Supports wildcards: http://localhost:*, https://*.onrender.com
  # Override via environment variable: CORS_ALLOWED_ORIGINS
  allowed-origins: http://localhost:*,https://*.onrender.com

# ========================================
# SpringDoc OpenAPI Configuration
# ========================================
springdoc:
  # Swagger UI configuration
  swagger-ui:
    path: /swagger-ui.html
    enabled: true
    # Try it out enabled by default
    try-it-out-enabled: true
    # Display request duration
    display-request-duration: true
    # Group operations by tags
    tags-sorter: alpha
    operations-sorter: alpha

  # API docs configuration
  api-docs:
    path: /v3/api-docs
    enabled: true

  # Show Spring Boot actuator endpoints (if added later)
  show-actuator: false

# ========================================
# Actuator Configuration
# ========================================
management:
  endpoints:
    web:
      exposure:
        # Expose health endpoint for local development
        include: health
  endpoint:
    health:
      show-details: always  # Show detailed health info in development

